// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }

// Import styles of packages that you've installed.
// All packages except `@mantine/hooks` require styles imports
import "@mantine/core/styles.css";
// import "./globals.css";
import { Roboto_Mono } from "next/font/google";
import { Group, Anchor, Container, Box, Center } from "@mantine/core";

import {
  ColorSchemeScript,
  MantineProvider,
  mantineHtmlProps,
} from "@mantine/core";

export const metadata = {
  title: "My Mantine app",
  description: "I have followed setup instructions carefully",
};

const robotoMono = Roboto_Mono({
  subsets: ["latin"],
});

const NavbarStyle = {
  background: "#31087B",
  boxShadow: "0 4px 16px 0 rgba(0,0,0,0.25)",
};

const navbarItems = [
  {
    title: "Home",
    href: "/",
  },
  {
    title: "Projects",
    href: "/projects",
  },
  {
    title: "Experience",
    href: "/experience",
  },
  {
    title: "Blogs",
    href: "/blogs",
  },
];

// navbar
const Navbar = () => {
  return (
    <Box style={NavbarStyle}>
      <Container size="md" py="md">
        <Group justify="space-between" px={50}>
          {navbarItems.map((item, idx) => (
            <Anchor
              href={item.href}
              size="lg"
              underline="never"
              c="white"
              className="navbar-link"
              key={idx}
            >
              {item.title}
            </Anchor>
          ))}
        </Group>
      </Container>
    </Box>
  );
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en" {...mantineHtmlProps}>
      <head>
        <ColorSchemeScript />
      </head>
      <body className={`${robotoMono.className} h-screen`}>
        <MantineProvider>
          <Navbar />
          <Center h="100%" style={{ margin: 0, padding: 0 }}>
            {children}
          </Center>
        </MantineProvider>
      </body>
    </html>
  );
}
